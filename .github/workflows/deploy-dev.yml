name: Terraform Deploy to Dev

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: infra-dev
  cancel-in-progress: false

env:
  AWS_REGION: eu-west-1
  ENV: dev

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ðŸ”’ Fail early if the role secret isn't visible to this job
      - name: Assert AWS_OIDC_ROLE_ARN is present
        run: |
          if [ -z "${{ secrets.AWS_OIDC_ROLE_ARN }}" ]; then
            echo "ERROR: Missing secret AWS_OIDC_ROLE_ARN (repo-level or environment: dev)" >&2
            exit 1
          fi

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      # âœ… Sanity check that OIDC worked
      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # Init against your S3+DynamoDB backend declared in main.tf
      - name: Terraform Init
        run: terraform init -reconfigure -input=false

      - name: Select/Create workspace
        run: terraform workspace select ${{ env.ENV }} || terraform workspace new ${{ env.ENV }}

      - name: Terraform Plan
        run: terraform plan -input=false -var-file=envs/${{ env.ENV }}.tfvars

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var-file=envs/${{ env.ENV }}.tfvars
