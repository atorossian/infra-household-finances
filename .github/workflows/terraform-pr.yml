name: Terraform PR (plan)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  lint_validate:
    name: Lint & Validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Init (local backend, no creds)
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate

  plan:
    name: Terraform Plan (dev)
    runs-on: ubuntu-latest
    needs: lint_validate
    # Only assume role for same-repo PRs. Forks cannot access env secrets.
    if: ${{ github.event.pull_request.head.repo.fork == false }}
    environment: dev
    permissions:
      id-token: write        # for OIDC
      contents: read
      pull-requests: write   # to comment plan
    env:
      AWS_REGION: eu-west-1
      ENV: dev

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Verify AWS_OIDC_ROLE_ARN is present
        run: |
          if [ -z "${{ secrets.AWS_OIDC_ROLE_ARN }}" ]; then
            echo "ERROR: Secret AWS_OIDC_ROLE_ARN not available to environment 'dev'."
            exit 1
          fi

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          role-session-name: gha-terraform-pr
          aws-region: ${{ env.AWS_REGION }}

      # Real init against S3 backend so plan reads remote state
      - name: Terraform Init (S3 backend)
        run: terraform init -reconfigure -input=false

      - name: Select/Create Workspace
        run: terraform workspace select ${{ env.ENV }} || terraform workspace new ${{ env.ENV }}

      - name: Terraform Plan (dev)
        id: plan
        run: terraform plan -input=false -no-color -var-file=envs/${{ env.ENV }}.tfvars | tee plan.out

      - name: Comment plan on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('plan.out', 'utf8');
            const truncated = body.length > 60000 ? body.slice(0,60000) + '\n\n…(truncated)…' : body;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `### Terraform Plan (dev)\n\n\`\`\`\n${truncated}\n\`\`\``
            });

  # Optional: make forked PRs pass with limited checks
  plan_fork_notice:
    name: Fork PR notice
    runs-on: ubuntu-latest
    needs: lint_validate
    if: ${{ github.event.pull_request.head.repo.fork == true }}
    steps:
      - name: Explain restriction
        run: |
          echo "Forked PR detected. Skipping Terraform plan because OIDC role/secrets are not available to forks."
